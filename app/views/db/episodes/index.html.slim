= content_for :site_page_title, "「#{@work.title}」のエピソード"

= render "db/works/header", work: @work

= render "syobocal_alert.html.slim", work: @work

.pull-right
  - if current_user.role.admin? || current_user.role.editor?
    = link_to "新規作成", new_db_work_multiple_episode_path(@work), class: "btn btn-primary"
  - else
    = link_to "新規作成", new_db_work_draft_multiple_episode_path(@work), class: "btn btn-primary"

.clearfix

table.table.table-striped
  thead
    tr
      th ID
      th 話数
      th サブタイトル
      th 次のエピソード
      th しょぼかる
      th ソート番号
      - if current_user.role.admin?
        th しょぼかる番号
      th 記録数
      th 編集
      - if policy(@episodes).hide?
        th 非公開
      - if policy(@episodes).destroy?
        th 削除
  tbody
    - @episodes.each do |episode|
      tr
        td
          = link_to episode.id, work_episode_path(@work, episode), target: "_blank"
          - if episode.published?
            = icon("check-circle-o", class: "status-published enabled", "data-toggle" => "tooltip", title: "このエピソードは公開されています")
          - else
            = icon("check-circle-o", class: "status-published disabled", "data-toggle" => "tooltip", title: "このエピソードは非公開になっています")
        td = episode.number.presence || "-"
        td = episode.title.presence || "-"
        td = episode.next_episode.try!(:number).presence || "-"
        td
          - if episode.fetch_syobocal?
            | 同期中
          - else
            | 同期停止中
        td = episode.sort_number
        - if current_user.role.admin?
          td = episode.sc_count
        td = episode.checkins.count
        td
          - if current_user.role.admin? || current_user.role.editor?
            = link_to "編集", edit_db_work_episode_path(@work, episode), class: "btn btn-primary btn-sm"
          - else
            = link_to "編集", new_db_work_draft_episode_path(@work, id: episode), class: "btn btn-primary btn-sm"
        - if policy(episode).hide?
          td
            - if episode.published?
              = link_to "非公開", hide_db_work_episode_path(@work, episode), class: "btn btn-warning btn-sm", data: { method: "patch", confirm: "このエピソードを非公開にしますか？" }
        - if policy(episode).destroy?
          td = link_to "削除", db_work_episode_path(@work, episode), class: "btn btn-danger btn-sm", data: { method: :delete, confirm: "このエピソードを削除しますか？" }


- if @episodes.blank?
  .well 登録されているエピソードはありません。
